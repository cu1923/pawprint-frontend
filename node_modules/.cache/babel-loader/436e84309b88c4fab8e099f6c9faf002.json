{"ast":null,"code":"import _slicedToArray from\"/Users/siyuchen/Documents/GitHub/pawprint/pawprint/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Axios from\"axios\";import\"../css/Image.css\";import{useNavigate}from\"react-router-dom\";import{Button}from\"./Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ImgUpload(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),image=_useState4[0],setImage=_useState4[1];var nav=useNavigate();var upload=function upload(){if(localStorage.getItem(\"loggedIn\")===\"false\"){console.log(\"here\");alert(\"please log in to post!\");}else{var formData=new FormData();formData.append(\"file\",image[0]);formData.append(\"upload_preset\",\"t47cisgt\");Axios.post('https://api.cloudinary.com/v1_1/bruin-pawprint/image/upload',formData).then(function(response){var fileName=response.data.public_id;console.log(fileName);Axios.post(\"http://localhost:8000/post\",{title:title,image:fileName,author:localStorage.getItem(\"username\")});});alert(\"successfully posted!\");nav('/post');window.location.reload(false);};};return/*#__PURE__*/_jsx(\"div\",{className:\"createContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ImgUpload\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create a Post\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Caption\",onChange:function onChange(event){setTitle(event.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:function onChange(e){return setImage(e.target.files);}}),/*#__PURE__*/_jsx(Button,{onClick:upload,primary:\"true\",children:\"Create\"})]})});}export default ImgUpload;","map":{"version":3,"sources":["/Users/siyuchen/Documents/GitHub/pawprint/pawprint/client/src/components/ImgUpload.jsx"],"names":["React","useState","Axios","useNavigate","Button","ImgUpload","title","setTitle","image","setImage","nav","upload","localStorage","getItem","console","log","alert","formData","FormData","append","post","then","response","fileName","data","public_id","author","window","location","reload","event","target","value","e","files"],"mappings":"4IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,kBAAP,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,MAAT,KAAuB,UAAvB,C,wFAEA,QAASC,CAAAA,SAAT,EAAqB,CACnB,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAA0BN,QAAQ,CAAC,EAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eAEA,GAAIC,CAAAA,GAAG,CAAGP,WAAW,EAArB,CAEA,GAAMQ,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAK,CAClB,GAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAqC,OAAzC,CAAiD,CAC/CC,OAAO,CAACC,GAAR,CAAY,MAAZ,EACAC,KAAK,CAAC,wBAAD,CAAL,CACD,CAHD,IAII,CACF,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAwBX,KAAK,CAAC,CAAD,CAA7B,EACAS,QAAQ,CAACE,MAAT,CAAgB,eAAhB,CAAiC,UAAjC,EACAjB,KAAK,CAACkB,IAAN,CAAW,6DAAX,CACAH,QADA,EAEEI,IAFF,CAEO,SAACC,QAAD,CAAa,CAEpB,GAAMC,CAAAA,QAAQ,CAAGD,QAAQ,CAACE,IAAT,CAAcC,SAA/B,CACAX,OAAO,CAACC,GAAR,CAAYQ,QAAZ,EACArB,KAAK,CAACkB,IAAN,CAAW,4BAAX,CAAwC,CACtCd,KAAK,CAAEA,KAD+B,CAEtCE,KAAK,CAACe,QAFgC,CAGtCG,MAAM,CAAEd,YAAY,CAACC,OAAb,CAAqB,UAArB,CAH8B,CAAxC,EAKD,CAXC,EAYFG,KAAK,CAAC,sBAAD,CAAL,CACAN,GAAG,CAAC,OAAD,CAAH,CACAiB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EACD,EACA,CAzBD,CA2BA,mBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACE,qCADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CACE,WAAW,CAAC,SADd,CAEE,QAAQ,CAAE,kBAACC,KAAD,CAAW,CACrBvB,QAAQ,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CACG,CAJL,EAFF,cASE,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAE,kBAACC,CAAD,QAAMxB,CAAAA,QAAQ,CAACwB,CAAC,CAACF,MAAF,CAASG,KAAV,CAAd,EAA7B,EATF,cAUE,KAAC,MAAD,EAAQ,OAAO,CAAEvB,MAAjB,CAAyB,OAAO,CAAC,MAAjC,oBAVF,GADF,EADF,CAgBD,CACD,cAAeN,CAAAA,SAAf","sourcesContent":["import React, { useState}  from \"react\";\nimport Axios from \"axios\";\nimport \"../css/Image.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"./Button\";\n\nfunction ImgUpload() {\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState([]);\n\n  let nav = useNavigate();\n\n  const upload = () =>{\n    if (localStorage.getItem(\"loggedIn\") === \"false\"){\n      console.log(\"here\")\n      alert(\"please log in to post!\")\n    }\n    else{\n      const formData = new FormData();\n      formData.append(\"file\", image[0]);\n      formData.append(\"upload_preset\", \"t47cisgt\");\n      Axios.post('https://api.cloudinary.com/v1_1/bruin-pawprint/image/upload',\n      formData\n      ).then((response) =>{\n    \n      const fileName = response.data.public_id;\n      console.log(fileName)\n      Axios.post(\"http://localhost:8000/post\",{\n        title: title,\n        image:fileName,\n        author: localStorage.getItem(\"username\"),\n      })\n    });\n    alert(\"successfully posted!\")\n    nav('/post')\n    window.location.reload(false);\n  };\n  }\n\n  return (\n    <div className=\"createContainer\">\n      <div className=\"ImgUpload\">\n        <h1>Create a Post</h1>\n        <input type=\"text\"\n          placeholder=\"Caption\"\n          onChange={(event) => {\n          setTitle(event.target.value);\n            }}\n       />\n\n        <input type=\"file\" onChange={(e)=> setImage(e.target.files)}/>\n        <Button onClick={upload} primary=\"true\">Create</Button>\n      </div>\n    </div>\n  );\n}\nexport default ImgUpload;"]},"metadata":{},"sourceType":"module"}