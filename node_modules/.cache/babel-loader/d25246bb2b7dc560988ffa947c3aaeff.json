{"ast":null,"code":"var _jsxFileName = \"/Users/siyuchen/Documents/GitHub/pawprint/pawprint/client/src/components/Display.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport Dropdown from './Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Display() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      isOpen: isOpen,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Display, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/siyuchen/Documents/GitHub/pawprint/pawprint/client/src/components/Display.js"],"names":["React","useState","Navbar","Dropdown","Display","isOpen","setIsOpen","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMM,MAAM,GAAG,MAAM;AACjBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,4BACG,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEF,MAAlB;AAA0B,MAAA,MAAM,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA,kBADJ;AAMH;;GAbQH,O;;KAAAA,O;AAeT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport Dropdown from './Dropdown';\n\nfunction Display() {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <>\n           <Navbar toggle={toggle} />\n           <Dropdown isOpen={isOpen} toggle={toggle} />\n        </>\n    );\n}\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}